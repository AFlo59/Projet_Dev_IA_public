@model IEnumerable<DnDGameMaster.WebApp.Models.AICosts>
@{
    ViewData["Title"] = "Coûts IA";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0 text-gray-800">
            <i class="fas fa-dollar-sign text-primary"></i> Coûts IA
        </h1>
        <div class="btn-group" role="group">
            <button type="button" class="btn btn-outline-primary" onclick="exportCosts()">
                <i class="fas fa-download"></i> Exporter
            </button>
        </div>
    </div>

    <!-- Filtres -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filtres</h6>
        </div>
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-3">
                    <label for="fromDate" class="form-label">Date de début</label>
                    <input type="date" class="form-control" id="fromDate" name="fromDate" value="@ViewBag.FromDate?.ToString("yyyy-MM-dd")">
                </div>
                <div class="col-md-3">
                    <label for="toDate" class="form-label">Date de fin</label>
                    <input type="date" class="form-control" id="toDate" name="toDate" value="@ViewBag.ToDate?.ToString("yyyy-MM-dd")">
                </div>
                <div class="col-md-3">
                    <label for="provider" class="form-label">Fournisseur</label>
                    <select class="form-select" id="provider" name="provider">
                        <option value="">Tous</option>
                        @if (ViewBag.Provider?.ToString() == "OpenAI")
                        {
                            <option value="OpenAI" selected>OpenAI</option>
                        }
                        else
                        {
                            <option value="OpenAI">OpenAI</option>
                        }
                        @if (ViewBag.Provider?.ToString() == "Anthropic")
                        {
                            <option value="Anthropic" selected>Anthropic</option>
                        }
                        else
                        {
                            <option value="Anthropic">Anthropic</option>
                        }
                        @if (ViewBag.Provider?.ToString() == "Google")
                        {
                            <option value="Google" selected>Google</option>
                        }
                        else
                        {
                            <option value="Google">Google</option>
                        }
                    </select>
                </div>
                <div class="col-md-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary me-2">
                        <i class="fas fa-search"></i> Filtrer
                    </button>
                    <a href="@Url.Action("Costs")" class="btn btn-secondary">
                        <i class="fas fa-times"></i> Réinitialiser
                    </a>
                </div>
            </form>
        </div>
    </div>

    <!-- Résumé des coûts -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Coût Total
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.Sum(c => c.TotalCost).ToString("C")
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Tokens Utilisés
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.Sum(c => c.TokensUsed).ToString("N0")
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-tokens fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                Modèles Utilisés
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.Select(c => c.ModelName).Distinct().Count()
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-brain fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Coût Moyen/Jour
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @(Model.Any() ? Model.GroupBy(c => c.Date).Average(g => g.Sum(c => c.TotalCost)).ToString("C") : "$0.00")
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-calendar fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tableau des coûts -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Détail des Coûts</h6>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-bordered" id="costsTable" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Fournisseur</th>
                                <th>Modèle</th>
                                <th>Opération</th>
                                <th>Tokens</th>
                                <th>Coût/Token</th>
                                <th>Coût Total</th>
                                <th>Campagne</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var cost in Model.OrderByDescending(c => c.Date))
                            {
                                <tr>
                                    <td>@cost.Date.ToString("dd/MM/yyyy")</td>
                                    <td>
                                        <span class="badge bg-primary">@cost.Provider</span>
                                    </td>
                                    <td>@cost.ModelName</td>
                                    <td>
                                        <span class="badge bg-info">@cost.OperationType</span>
                                    </td>
                                    <td>@cost.TokensUsed.ToString("N0")</td>
                                    <td>@cost.CostPerToken.ToString("C8")</td>
                                    <td class="font-weight-bold">@cost.TotalCost.ToString("C")</td>
                                    <td>
                                        @if (cost.CampaignId.HasValue)
                                        {
                                            <span class="badge bg-secondary">Campagne @cost.CampaignId</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-4">
                    <i class="fas fa-dollar-sign fa-3x text-gray-300 mb-3"></i>
                    <h5 class="text-gray-500">Aucun coût enregistré</h5>
                    <p class="text-gray-400">Les coûts IA apparaîtront ici une fois que des opérations auront été effectuées.</p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function exportCosts() {
            const fromDate = document.getElementById('fromDate').value;
            const toDate = document.getElementById('toDate').value;
            const provider = document.getElementById('provider').value;
            
            const url = '@Url.Action("ExportCosts")' + 
                '?fromDate=' + fromDate + 
                '&toDate=' + toDate + 
                '&provider=' + provider;
            
            window.location.href = url;
        }

        $(document).ready(function() {
            $('#costsTable').DataTable({
                "order": [[0, "desc"]],
                "pageLength": 25,
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.24/i18n/French.json"
                }
            });
        });
    </script>
} 